# Use a lightweight base image
FROM alpine:latest

RUN adduser -D -h /home/snowdog snowdog

WORKDIR /build
COPY ./edge /build/
RUN apk add alpine-sdk && cd /build/ && \
    make && mv ../snowdog.tgz /home/snowdog/ && \
    apk del alpine-sdk

# Extract the zip file
RUN cd /home/snowdog && tar -xzf snowdog.tgz -C /home/snowdog/ && rm -rf /build

# Install required packages
RUN apk add --no-cache socat redis \
    python3 python3-dev py3-pip curl \
    && python3 -m venv /home/snowdog/venv \
    && source /home/snowdog/venv/bin/activate \
    && pip install --upgrade pip \
    && pip install pyserial gpxpy \
    && pip install -r /home/snowdog/requirements.txt

# Make the start script executable
RUN chmod +x /home/snowdog/start_snowdog_docker.sh

# Copy test data from host's home folder to the image
COPY nmea_testdata /home/snowdog/nmea_testdata
# Remove possibly existing secrets to replace it with docker specific
RUN rm -f /home/snowdog/secrets.py
COPY secrets_docker.py /home/snowdog/secrets.py

ENV VIRTUAL_SNOWDOG=1

WORKDIR /home/snowdog

#CMD ["cat", "-la", "home/snowdog/"]

CMD ["sh", "-c", "/home/snowdog/start_snowdog_docker.sh"]
